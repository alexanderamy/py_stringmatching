matrix:
  include:
  - os: linux
    python: 2.7
    env: PYTHON_VERSION=2.7
  - os: linux
    python: 3.3
    env: PYTHON_VERSION=3.3
  - os: linux
    python: 3.4
    env: PYTHON_VERSION=3.4
  - os: linux
    python: 3.5
    env: PYTHON_VERSION=3.5
  - os: linux                                                                   
    python: 3.6                                                                 
    env: PYTHON_VERSION=3.6       
  - os: linux
    python: 3.7
    env: PYTHON_VERSION=3.7
  - os: osx
    language: generic
    env:
    - PYTHON_VERSION=2.7
  - os: osx
    language: generic
    env:
    - PYTHON_VERSION=3.3
  - os: osx
    language: generic
    env:
    - PYTHON_VERSION=3.4
  - os: osx
    language: generic
    env:
    - PYTHON_VERSION=3.5
  - os: osx                                                                     
    language: generic                                                           
    env:                                                                        
    - PYTHON_VERSION=3.6  
  - os: osx
    language: generic
    env:
    - PYTHON_VERSION=3.7

before_install:
  - python --version
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$PYTHON_VERSION" == "2.7" ]; then wget http://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$PYTHON_VERSION" != "2.7" ]; then wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$PYTHON_VERSION" == "2.7" ]; then wget https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh -O miniconda.sh; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$PYTHON_VERSION" != "2.7" ]; then wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh; fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"

install:
  - conda create --yes -n py_stringmatching_test_env python=$PYTHON_VERSION
  - source activate py_stringmatching_test_env
  - python --version
  - pip install numpy six nose Cython coveralls
  - python setup.py build_ext --inplace

script:
  - coverage run -m nose
  - uname -a

after_success:
  - coveralls
